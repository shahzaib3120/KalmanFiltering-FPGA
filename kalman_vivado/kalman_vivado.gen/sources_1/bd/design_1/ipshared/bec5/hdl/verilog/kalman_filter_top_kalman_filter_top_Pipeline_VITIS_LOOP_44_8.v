// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kalman_filter_top_kalman_filter_top_Pipeline_VITIS_LOOP_44_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        z_address0,
        z_ce0,
        z_q0,
        sext_ln1348,
        sext_ln1348_1,
        sext_ln1348_2,
        sext_ln1348_3,
        y_V_1_0257_out,
        y_V_1_0257_out_ap_vld,
        y_V_0_0256_out,
        y_V_0_0256_out_ap_vld,
        H_address0,
        H_ce0,
        H_q0,
        H_address1,
        H_ce1,
        H_q1,
        H_address2,
        H_ce2,
        H_q2,
        H_address3,
        H_ce3,
        H_q3,
        grp_fu_793_p_din0,
        grp_fu_793_p_din1,
        grp_fu_793_p_dout0,
        grp_fu_793_p_ce,
        grp_fu_797_p_din0,
        grp_fu_797_p_din1,
        grp_fu_797_p_dout0,
        grp_fu_797_p_ce,
        grp_fu_801_p_din0,
        grp_fu_801_p_din1,
        grp_fu_801_p_dout0,
        grp_fu_801_p_ce,
        grp_fu_805_p_din0,
        grp_fu_805_p_din1,
        grp_fu_805_p_dout0,
        grp_fu_805_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] z_address0;
output   z_ce0;
input  [31:0] z_q0;
input  [31:0] sext_ln1348;
input  [31:0] sext_ln1348_1;
input  [31:0] sext_ln1348_2;
input  [31:0] sext_ln1348_3;
output  [31:0] y_V_1_0257_out;
output   y_V_1_0257_out_ap_vld;
output  [31:0] y_V_0_0256_out;
output   y_V_0_0256_out_ap_vld;
output  [2:0] H_address0;
output   H_ce0;
input  [16:0] H_q0;
output  [2:0] H_address1;
output   H_ce1;
input  [16:0] H_q1;
output  [2:0] H_address2;
output   H_ce2;
input  [16:0] H_q2;
output  [2:0] H_address3;
output   H_ce3;
input  [16:0] H_q3;
output  [31:0] grp_fu_793_p_din0;
output  [16:0] grp_fu_793_p_din1;
input  [47:0] grp_fu_793_p_dout0;
output   grp_fu_793_p_ce;
output  [31:0] grp_fu_797_p_din0;
output  [16:0] grp_fu_797_p_din1;
input  [47:0] grp_fu_797_p_dout0;
output   grp_fu_797_p_ce;
output  [31:0] grp_fu_801_p_din0;
output  [16:0] grp_fu_801_p_din1;
input  [47:0] grp_fu_801_p_dout0;
output   grp_fu_801_p_ce;
output  [31:0] grp_fu_805_p_din0;
output  [16:0] grp_fu_805_p_din1;
input  [47:0] grp_fu_805_p_dout0;
output   grp_fu_805_p_ce;

reg ap_idle;
reg z_ce0;
reg y_V_1_0257_out_ap_vld;
reg y_V_0_0256_out_ap_vld;
reg H_ce0;
reg H_ce1;
reg H_ce2;
reg H_ce3;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln44_fu_218_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [47:0] sext_ln1348_3_cast_fu_190_p1;
reg  signed [47:0] sext_ln1348_3_cast_reg_464;
wire  signed [47:0] sext_ln1348_2_cast_fu_194_p1;
reg  signed [47:0] sext_ln1348_2_cast_reg_469;
wire  signed [47:0] sext_ln1348_1_cast_fu_198_p1;
reg  signed [47:0] sext_ln1348_1_cast_reg_474;
wire  signed [47:0] sext_ln1348_cast_fu_202_p1;
reg  signed [47:0] sext_ln1348_cast_reg_479;
reg   [1:0] i_reg_484;
reg   [1:0] i_reg_484_pp0_iter1_reg;
wire   [0:0] empty_fu_214_p1;
reg   [0:0] empty_reg_489;
reg   [0:0] empty_reg_489_pp0_iter1_reg;
reg   [0:0] empty_reg_489_pp0_iter2_reg;
reg   [0:0] empty_reg_489_pp0_iter3_reg;
reg   [0:0] empty_reg_489_pp0_iter4_reg;
reg   [0:0] icmp_ln44_reg_495;
reg   [0:0] icmp_ln44_reg_495_pp0_iter1_reg;
reg   [0:0] icmp_ln44_reg_495_pp0_iter2_reg;
reg   [0:0] icmp_ln44_reg_495_pp0_iter3_reg;
wire   [2:0] tmp_s_fu_230_p3;
reg   [2:0] tmp_s_reg_499;
reg   [16:0] H_load_reg_525;
reg   [16:0] H_load_1_reg_530;
wire   [47:0] zext_ln1348_fu_283_p1;
wire   [47:0] zext_ln1348_1_fu_291_p1;
reg   [16:0] H_load_2_reg_550;
reg   [16:0] H_load_3_reg_555;
reg   [31:0] z_load_reg_560;
reg   [47:0] mul_ln1348_reg_565;
reg   [47:0] mul_ln1348_1_reg_570;
wire   [47:0] zext_ln1348_2_fu_299_p1;
wire   [47:0] zext_ln1348_3_fu_307_p1;
reg   [47:0] mul_ln1348_2_reg_585;
reg   [31:0] tmp_5_reg_590;
reg   [47:0] mul_ln1348_3_reg_595;
wire   [63:0] zext_ln1271_fu_238_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1271_4_fu_249_p1;
wire   [63:0] zext_ln1271_5_fu_264_p1;
wire   [63:0] zext_ln1271_6_fu_274_p1;
wire   [63:0] i_3_cast_fu_279_p1;
reg   [1:0] i_3_fu_78;
wire   [1:0] add_ln44_fu_224_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_i;
reg   [31:0] y_V_1_fu_82;
wire   [31:0] y_V_1_6_fu_418_p3;
reg   [31:0] y_V_1_3_fu_86;
wire   [31:0] y_V_1_5_fu_411_p3;
wire    ap_block_pp0_stage0_01001;
wire   [2:0] or_ln1271_fu_243_p2;
wire   [2:0] or_ln1271_1_fu_259_p2;
wire   [2:0] or_ln1271_2_fu_269_p2;
wire   [47:0] shl_ln838_3_fu_315_p3;
wire   [47:0] sub_ln1348_fu_322_p2;
wire   [31:0] tmp_4_fu_327_p4;
wire   [47:0] shl_ln838_4_fu_337_p3;
wire   [47:0] sub_ln1348_1_fu_345_p2;
wire   [47:0] shl_ln838_5_fu_366_p3;
wire   [47:0] sub_ln1348_2_fu_373_p2;
wire   [31:0] tmp_6_fu_378_p4;
wire   [47:0] shl_ln838_6_fu_388_p3;
wire   [47:0] sub_ln1348_3_fu_396_p2;
wire   [31:0] y_V_0_fu_401_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kalman_filter_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln44_fu_218_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_3_fu_78 <= add_ln44_fu_224_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_3_fu_78 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_load_1_reg_530 <= H_q2;
        H_load_reg_525 <= H_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        H_load_2_reg_550 <= H_q1;
        H_load_3_reg_555 <= H_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_reg_489 <= empty_fu_214_p1;
        empty_reg_489_pp0_iter1_reg <= empty_reg_489;
        i_reg_484 <= ap_sig_allocacmp_i;
        i_reg_484_pp0_iter1_reg <= i_reg_484;
        icmp_ln44_reg_495 <= icmp_ln44_fu_218_p2;
        icmp_ln44_reg_495_pp0_iter1_reg <= icmp_ln44_reg_495;
        sext_ln1348_1_cast_reg_474 <= sext_ln1348_1_cast_fu_198_p1;
        sext_ln1348_2_cast_reg_469 <= sext_ln1348_2_cast_fu_194_p1;
        sext_ln1348_3_cast_reg_464 <= sext_ln1348_3_cast_fu_190_p1;
        sext_ln1348_cast_reg_479 <= sext_ln1348_cast_fu_202_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        empty_reg_489_pp0_iter2_reg <= empty_reg_489_pp0_iter1_reg;
        empty_reg_489_pp0_iter3_reg <= empty_reg_489_pp0_iter2_reg;
        empty_reg_489_pp0_iter4_reg <= empty_reg_489_pp0_iter3_reg;
        icmp_ln44_reg_495_pp0_iter2_reg <= icmp_ln44_reg_495_pp0_iter1_reg;
        icmp_ln44_reg_495_pp0_iter3_reg <= icmp_ln44_reg_495_pp0_iter2_reg;
        mul_ln1348_1_reg_570 <= grp_fu_797_p_dout0;
        mul_ln1348_2_reg_585 <= grp_fu_801_p_dout0;
        mul_ln1348_3_reg_595 <= grp_fu_805_p_dout0;
        mul_ln1348_reg_565 <= grp_fu_793_p_dout0;
        tmp_5_reg_590 <= {{sub_ln1348_1_fu_345_p2[47:16]}};
        z_load_reg_560 <= z_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln44_fu_218_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_s_reg_499[2] <= tmp_s_fu_230_p3[2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        y_V_1_3_fu_86 <= y_V_1_5_fu_411_p3;
        y_V_1_fu_82 <= y_V_1_6_fu_418_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_ce0 = 1'b1;
    end else begin
        H_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_ce1 = 1'b1;
    end else begin
        H_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_ce2 = 1'b1;
    end else begin
        H_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_ce3 = 1'b1;
    end else begin
        H_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln44_fu_218_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 2'd0;
    end else begin
        ap_sig_allocacmp_i = i_3_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln44_reg_495_pp0_iter3_reg == 1'd1))) begin
        y_V_0_0256_out_ap_vld = 1'b1;
    end else begin
        y_V_0_0256_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln44_reg_495_pp0_iter3_reg == 1'd1))) begin
        y_V_1_0257_out_ap_vld = 1'b1;
    end else begin
        y_V_1_0257_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        z_ce0 = 1'b1;
    end else begin
        z_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign H_address0 = zext_ln1271_6_fu_274_p1;

assign H_address1 = zext_ln1271_5_fu_264_p1;

assign H_address2 = zext_ln1271_4_fu_249_p1;

assign H_address3 = zext_ln1271_fu_238_p1;

assign add_ln44_fu_224_p2 = (ap_sig_allocacmp_i + 2'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_fu_214_p1 = ap_sig_allocacmp_i[0:0];

assign grp_fu_793_p_ce = 1'b1;

assign grp_fu_793_p_din0 = sext_ln1348_cast_reg_479;

assign grp_fu_793_p_din1 = zext_ln1348_fu_283_p1;

assign grp_fu_797_p_ce = 1'b1;

assign grp_fu_797_p_din0 = sext_ln1348_1_cast_reg_474;

assign grp_fu_797_p_din1 = zext_ln1348_1_fu_291_p1;

assign grp_fu_801_p_ce = 1'b1;

assign grp_fu_801_p_din0 = sext_ln1348_2_cast_reg_469;

assign grp_fu_801_p_din1 = zext_ln1348_2_fu_299_p1;

assign grp_fu_805_p_ce = 1'b1;

assign grp_fu_805_p_din0 = sext_ln1348_3_cast_reg_464;

assign grp_fu_805_p_din1 = zext_ln1348_3_fu_307_p1;

assign i_3_cast_fu_279_p1 = i_reg_484_pp0_iter1_reg;

assign icmp_ln44_fu_218_p2 = ((ap_sig_allocacmp_i == 2'd2) ? 1'b1 : 1'b0);

assign or_ln1271_1_fu_259_p2 = (tmp_s_reg_499 | 3'd2);

assign or_ln1271_2_fu_269_p2 = (tmp_s_reg_499 | 3'd3);

assign or_ln1271_fu_243_p2 = (tmp_s_fu_230_p3 | 3'd1);

assign sext_ln1348_1_cast_fu_198_p1 = $signed(sext_ln1348_1);

assign sext_ln1348_2_cast_fu_194_p1 = $signed(sext_ln1348_2);

assign sext_ln1348_3_cast_fu_190_p1 = $signed(sext_ln1348_3);

assign sext_ln1348_cast_fu_202_p1 = $signed(sext_ln1348);

assign shl_ln838_3_fu_315_p3 = {{z_load_reg_560}, {16'd0}};

assign shl_ln838_4_fu_337_p3 = {{tmp_4_fu_327_p4}, {16'd0}};

assign shl_ln838_5_fu_366_p3 = {{tmp_5_reg_590}, {16'd0}};

assign shl_ln838_6_fu_388_p3 = {{tmp_6_fu_378_p4}, {16'd0}};

assign sub_ln1348_1_fu_345_p2 = (shl_ln838_4_fu_337_p3 - mul_ln1348_1_reg_570);

assign sub_ln1348_2_fu_373_p2 = (shl_ln838_5_fu_366_p3 - mul_ln1348_2_reg_585);

assign sub_ln1348_3_fu_396_p2 = (shl_ln838_6_fu_388_p3 - mul_ln1348_3_reg_595);

assign sub_ln1348_fu_322_p2 = (shl_ln838_3_fu_315_p3 - mul_ln1348_reg_565);

assign tmp_4_fu_327_p4 = {{sub_ln1348_fu_322_p2[47:16]}};

assign tmp_6_fu_378_p4 = {{sub_ln1348_2_fu_373_p2[47:16]}};

assign tmp_s_fu_230_p3 = {{empty_fu_214_p1}, {2'd0}};

assign y_V_0_0256_out = y_V_1_fu_82;

assign y_V_0_fu_401_p4 = {{sub_ln1348_3_fu_396_p2[47:16]}};

assign y_V_1_0257_out = y_V_1_3_fu_86;

assign y_V_1_5_fu_411_p3 = ((empty_reg_489_pp0_iter4_reg[0:0] == 1'b1) ? y_V_0_fu_401_p4 : y_V_1_3_fu_86);

assign y_V_1_6_fu_418_p3 = ((empty_reg_489_pp0_iter4_reg[0:0] == 1'b1) ? y_V_1_fu_82 : y_V_0_fu_401_p4);

assign z_address0 = i_3_cast_fu_279_p1;

assign zext_ln1271_4_fu_249_p1 = or_ln1271_fu_243_p2;

assign zext_ln1271_5_fu_264_p1 = or_ln1271_1_fu_259_p2;

assign zext_ln1271_6_fu_274_p1 = or_ln1271_2_fu_269_p2;

assign zext_ln1271_fu_238_p1 = tmp_s_fu_230_p3;

assign zext_ln1348_1_fu_291_p1 = H_load_1_reg_530;

assign zext_ln1348_2_fu_299_p1 = H_load_2_reg_550;

assign zext_ln1348_3_fu_307_p1 = H_load_3_reg_555;

assign zext_ln1348_fu_283_p1 = H_load_reg_525;

always @ (posedge ap_clk) begin
    tmp_s_reg_499[1:0] <= 2'b00;
end

endmodule //kalman_filter_top_kalman_filter_top_Pipeline_VITIS_LOOP_44_8
