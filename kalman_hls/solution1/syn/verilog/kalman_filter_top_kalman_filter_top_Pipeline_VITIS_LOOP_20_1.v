// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kalman_filter_top_kalman_filter_top_Pipeline_VITIS_LOOP_20_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln1273,
        sext_ln1273_1,
        sext_ln1273_2,
        sext_ln20,
        x_prior_V_3_0255_out,
        x_prior_V_3_0255_out_ap_vld,
        x_prior_V_2_0254_out,
        x_prior_V_2_0254_out_ap_vld,
        x_prior_V_1_0253_out,
        x_prior_V_1_0253_out_ap_vld,
        x_prior_V_0_0252_out,
        x_prior_V_0_0252_out_ap_vld,
        grp_fu_363_p_din0,
        grp_fu_363_p_din1,
        grp_fu_363_p_dout0,
        grp_fu_363_p_ce,
        grp_fu_377_p_din0,
        grp_fu_377_p_din1,
        grp_fu_377_p_dout0,
        grp_fu_377_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sext_ln1273;
input  [31:0] sext_ln1273_1;
input  [31:0] sext_ln1273_2;
input  [31:0] sext_ln20;
output  [31:0] x_prior_V_3_0255_out;
output   x_prior_V_3_0255_out_ap_vld;
output  [31:0] x_prior_V_2_0254_out;
output   x_prior_V_2_0254_out_ap_vld;
output  [31:0] x_prior_V_1_0253_out;
output   x_prior_V_1_0253_out_ap_vld;
output  [31:0] x_prior_V_0_0252_out;
output   x_prior_V_0_0252_out_ap_vld;
output  [31:0] grp_fu_363_p_din0;
output  [32:0] grp_fu_363_p_din1;
input  [47:0] grp_fu_363_p_dout0;
output   grp_fu_363_p_ce;
output  [31:0] grp_fu_377_p_din0;
output  [32:0] grp_fu_377_p_din1;
input  [47:0] grp_fu_377_p_dout0;
output   grp_fu_377_p_ce;

reg ap_idle;
reg x_prior_V_3_0255_out_ap_vld;
reg x_prior_V_2_0254_out_ap_vld;
reg x_prior_V_1_0253_out_ap_vld;
reg x_prior_V_0_0252_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln20_fu_160_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [47:0] sext_ln20_cast_fu_136_p1;
reg  signed [47:0] sext_ln20_cast_reg_412;
wire  signed [47:0] sext_ln1273_2_cast_fu_140_p1;
reg  signed [47:0] sext_ln1273_2_cast_reg_417;
wire  signed [47:0] sext_ln1273_1_cast_fu_144_p1;
reg  signed [47:0] sext_ln1273_1_cast_reg_422;
wire  signed [47:0] sext_ln1273_cast_fu_148_p1;
reg  signed [47:0] sext_ln1273_cast_reg_427;
reg   [0:0] icmp_ln20_reg_432;
reg   [0:0] icmp_ln20_reg_432_pp0_iter1_reg;
reg   [0:0] icmp_ln20_reg_432_pp0_iter2_reg;
wire   [1:0] trunc_ln21_fu_172_p1;
reg   [1:0] trunc_ln21_reg_436;
reg   [1:0] trunc_ln21_reg_436_pp0_iter1_reg;
reg   [1:0] trunc_ln21_reg_436_pp0_iter2_reg;
reg   [1:0] trunc_ln21_reg_436_pp0_iter3_reg;
wire   [31:0] tmp_fu_176_p6;
reg   [31:0] tmp_reg_441;
wire   [31:0] tmp_1_fu_190_p6;
reg   [31:0] tmp_1_reg_446;
wire   [31:0] tmp_2_fu_204_p6;
reg   [31:0] tmp_2_reg_451;
wire   [47:0] zext_ln1273_fu_223_p1;
wire   [47:0] zext_ln1273_1_fu_231_p1;
wire   [31:0] tmp_3_fu_247_p6;
reg   [31:0] tmp_3_reg_471;
reg   [47:0] mul_ln1273_1_reg_476;
reg   [31:0] tmp_10_reg_481;
wire   [47:0] grp_fu_242_p2;
reg   [47:0] mul_ln1273_2_reg_486;
wire   [47:0] grp_fu_273_p2;
reg   [47:0] mul_ln1273_3_reg_496;
reg   [31:0] tmp_11_reg_501;
reg   [2:0] i_fu_64;
wire   [2:0] add_ln20_fu_166_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_5;
wire    ap_block_pp0_stage0;
reg   [31:0] x_prior_V_1_fu_68;
reg   [31:0] x_prior_V_1_1_fu_72;
reg   [31:0] x_prior_V_1_2_fu_76;
reg   [31:0] x_prior_V_1_3_fu_80;
wire    ap_block_pp0_stage0_01001;
wire  signed [31:0] grp_fu_242_p0;
wire   [31:0] grp_fu_242_p1;
wire  signed [31:0] grp_fu_273_p0;
wire   [31:0] grp_fu_273_p1;
wire   [47:0] shl_ln_fu_278_p3;
wire   [47:0] add_ln1347_fu_285_p2;
wire   [31:0] tmp_s_fu_290_p4;
wire   [47:0] shl_ln838_1_fu_300_p3;
wire   [47:0] add_ln1347_1_fu_308_p2;
wire   [47:0] shl_ln838_2_fu_323_p3;
wire   [47:0] add_ln1347_2_fu_330_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [47:0] grp_fu_242_p10;
wire   [47:0] grp_fu_273_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kalman_filter_top_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1(
    .din0(32'd65536),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(trunc_ln21_fu_172_p1),
    .dout(tmp_fu_176_p6)
);

kalman_filter_top_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U2(
    .din0(32'd0),
    .din1(32'd65536),
    .din2(32'd0),
    .din3(32'd0),
    .din4(trunc_ln21_fu_172_p1),
    .dout(tmp_1_fu_190_p6)
);

kalman_filter_top_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3(
    .din0(32'd65536),
    .din1(32'd0),
    .din2(32'd65536),
    .din3(32'd0),
    .din4(trunc_ln21_fu_172_p1),
    .dout(tmp_2_fu_204_p6)
);

kalman_filter_top_mul_32s_32ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_242_p0),
    .din1(grp_fu_242_p1),
    .ce(1'b1),
    .dout(grp_fu_242_p2)
);

kalman_filter_top_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U7(
    .din0(32'd0),
    .din1(32'd65536),
    .din2(32'd0),
    .din3(32'd65536),
    .din4(trunc_ln21_reg_436),
    .dout(tmp_3_fu_247_p6)
);

kalman_filter_top_mul_32s_32ns_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_273_p0),
    .din1(grp_fu_273_p1),
    .ce(1'b1),
    .dout(grp_fu_273_p2)
);

kalman_filter_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln20_fu_160_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_64 <= add_ln20_fu_166_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_64 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln20_reg_432 <= icmp_ln20_fu_160_p2;
        icmp_ln20_reg_432_pp0_iter1_reg <= icmp_ln20_reg_432;
        sext_ln1273_1_cast_reg_422 <= sext_ln1273_1_cast_fu_144_p1;
        sext_ln1273_2_cast_reg_417 <= sext_ln1273_2_cast_fu_140_p1;
        sext_ln1273_cast_reg_427 <= sext_ln1273_cast_fu_148_p1;
        sext_ln20_cast_reg_412 <= sext_ln20_cast_fu_136_p1;
        tmp_3_reg_471 <= tmp_3_fu_247_p6;
        trunc_ln21_reg_436_pp0_iter1_reg <= trunc_ln21_reg_436;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln20_reg_432_pp0_iter2_reg <= icmp_ln20_reg_432_pp0_iter1_reg;
        mul_ln1273_1_reg_476 <= grp_fu_377_p_dout0;
        mul_ln1273_2_reg_486 <= grp_fu_242_p2;
        mul_ln1273_3_reg_496 <= grp_fu_273_p2;
        tmp_10_reg_481 <= {{grp_fu_363_p_dout0[47:16]}};
        tmp_11_reg_501 <= {{add_ln1347_1_fu_308_p2[47:16]}};
        trunc_ln21_reg_436_pp0_iter2_reg <= trunc_ln21_reg_436_pp0_iter1_reg;
        trunc_ln21_reg_436_pp0_iter3_reg <= trunc_ln21_reg_436_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_160_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_446 <= tmp_1_fu_190_p6;
        tmp_2_reg_451 <= tmp_2_fu_204_p6;
        tmp_reg_441 <= tmp_fu_176_p6;
        trunc_ln21_reg_436 <= trunc_ln21_fu_172_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln21_reg_436_pp0_iter3_reg == 2'd1))) begin
        x_prior_V_1_1_fu_72 <= {{add_ln1347_2_fu_330_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln21_reg_436_pp0_iter3_reg == 2'd2))) begin
        x_prior_V_1_2_fu_76 <= {{add_ln1347_2_fu_330_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln21_reg_436_pp0_iter3_reg == 2'd3))) begin
        x_prior_V_1_3_fu_80 <= {{add_ln1347_2_fu_330_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln21_reg_436_pp0_iter3_reg == 2'd0))) begin
        x_prior_V_1_fu_68 <= {{add_ln1347_2_fu_330_p2[47:16]}};
    end
end

always @ (*) begin
    if (((icmp_ln20_fu_160_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_5 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_5 = i_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln20_reg_432_pp0_iter2_reg == 1'd1))) begin
        x_prior_V_0_0252_out_ap_vld = 1'b1;
    end else begin
        x_prior_V_0_0252_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln20_reg_432_pp0_iter2_reg == 1'd1))) begin
        x_prior_V_1_0253_out_ap_vld = 1'b1;
    end else begin
        x_prior_V_1_0253_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln20_reg_432_pp0_iter2_reg == 1'd1))) begin
        x_prior_V_2_0254_out_ap_vld = 1'b1;
    end else begin
        x_prior_V_2_0254_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln20_reg_432_pp0_iter2_reg == 1'd1))) begin
        x_prior_V_3_0255_out_ap_vld = 1'b1;
    end else begin
        x_prior_V_3_0255_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1347_1_fu_308_p2 = (shl_ln838_1_fu_300_p3 + mul_ln1273_2_reg_486);

assign add_ln1347_2_fu_330_p2 = (shl_ln838_2_fu_323_p3 + mul_ln1273_3_reg_496);

assign add_ln1347_fu_285_p2 = (shl_ln_fu_278_p3 + mul_ln1273_1_reg_476);

assign add_ln20_fu_166_p2 = (ap_sig_allocacmp_i_5 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_242_p0 = sext_ln1273_2_cast_reg_417;

assign grp_fu_242_p1 = grp_fu_242_p10;

assign grp_fu_242_p10 = tmp_2_reg_451;

assign grp_fu_273_p0 = sext_ln20_cast_reg_412;

assign grp_fu_273_p1 = grp_fu_273_p10;

assign grp_fu_273_p10 = tmp_3_reg_471;

assign grp_fu_363_p_ce = 1'b1;

assign grp_fu_363_p_din0 = sext_ln1273_cast_reg_427;

assign grp_fu_363_p_din1 = zext_ln1273_fu_223_p1;

assign grp_fu_377_p_ce = 1'b1;

assign grp_fu_377_p_din0 = sext_ln1273_1_cast_reg_422;

assign grp_fu_377_p_din1 = zext_ln1273_1_fu_231_p1;

assign icmp_ln20_fu_160_p2 = ((ap_sig_allocacmp_i_5 == 3'd4) ? 1'b1 : 1'b0);

assign sext_ln1273_1_cast_fu_144_p1 = $signed(sext_ln1273_1);

assign sext_ln1273_2_cast_fu_140_p1 = $signed(sext_ln1273_2);

assign sext_ln1273_cast_fu_148_p1 = $signed(sext_ln1273);

assign sext_ln20_cast_fu_136_p1 = $signed(sext_ln20);

assign shl_ln838_1_fu_300_p3 = {{tmp_s_fu_290_p4}, {16'd0}};

assign shl_ln838_2_fu_323_p3 = {{tmp_11_reg_501}, {16'd0}};

assign shl_ln_fu_278_p3 = {{tmp_10_reg_481}, {16'd0}};

assign tmp_s_fu_290_p4 = {{add_ln1347_fu_285_p2[47:16]}};

assign trunc_ln21_fu_172_p1 = ap_sig_allocacmp_i_5[1:0];

assign x_prior_V_0_0252_out = x_prior_V_1_fu_68;

assign x_prior_V_1_0253_out = x_prior_V_1_1_fu_72;

assign x_prior_V_2_0254_out = x_prior_V_1_2_fu_76;

assign x_prior_V_3_0255_out = x_prior_V_1_3_fu_80;

assign zext_ln1273_1_fu_231_p1 = tmp_1_reg_446;

assign zext_ln1273_fu_223_p1 = tmp_reg_441;

endmodule //kalman_filter_top_kalman_filter_top_Pipeline_VITIS_LOOP_20_1
